{"version":3,"file":"form-videotime-selector.min.js","sources":["../src/form-videotime-selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Videotime instance selector for auto-complete form element.\r\n *\r\n * @module    cdelement_videotime/form-videotime-selector\r\n * @copyright  2024 bdecent gmbh <https://bdecent.de>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'core/ajax', 'jquery', 'mod_contentdesigner/elements',\r\n    'media_videojs/video-lazy', 'mod_videotime/player', 'core/notification'],\r\n    function (ajax, $, Elements, videoJS, VimeoPlayer, Notification) {\r\n\r\n        return {\r\n            // Public variables and functions.\r\n            processResults: function (selector, data) {\r\n\r\n                // Mangle the results into an array of objects.\r\n                var results = [];\r\n                var i = 0;\r\n                for (i = 0; i < data.length; i++) {\r\n                    results.push({ value: data[i].id, label: data[i].name });\r\n                }\r\n                return results;\r\n            },\r\n\r\n            transport: function (selector, query, success, failure) {\r\n                var el = document.querySelector(selector);\r\n\r\n                // Build the query.\r\n                var promises = null;\r\n\r\n                if (typeof query === \"undefined\") {\r\n                    query = '';\r\n                }\r\n\r\n                var courseid = el.dataset.courseid;\r\n\r\n                if (courseid == '') {\r\n                    courseid = 1;\r\n                }\r\n\r\n                var searchargs = {\r\n                    query: query,\r\n                    limitfrom: 0,\r\n                    limitnum: 100,\r\n                    courseid: courseid\r\n                };\r\n\r\n                var calls = [{\r\n                    methodname: 'cdelement_videotime_get_instance_menu', args: searchargs\r\n                }];\r\n\r\n                // Go go go!\r\n                promises = ajax.call(calls);\r\n                $.when.apply($.when, promises).done(function (data) {\r\n                    success(data);\r\n                }).fail(failure);\r\n            },\r\n\r\n            /**\r\n             * Update the course id.\r\n             *\r\n             * @param {*} cmField\r\n             * @param {*} fieldName\r\n             */\r\n            updateCourseID: (cmField, fieldName) => {\r\n                const courseField = document.querySelector('[name=' + fieldName + ']');\r\n                var el = document.querySelector('[name=' + cmField + ']');\r\n\r\n                const updateField = (e) => {\r\n                    const courseID = courseField.value;\r\n                    el.dataset.courseid = courseID;\r\n\r\n                    if (e) {\r\n                        el.value = '';\r\n                        var changeEvent = new Event('change');\r\n                        el.dispatchEvent(changeEvent);\r\n                    }\r\n                };\r\n\r\n                if (courseField !== null && el !== null) {\r\n                    updateField(false);\r\n                    courseField.addEventListener('change', updateField);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update the next elements.\r\n             *\r\n             * Runs the verification of current elemnet and updte the contents if element completed.\r\n             *\r\n             * @param {Integer} videoTimeID\r\n             * @param {Integer} instanceID\r\n             */\r\n            updateNextElements: function (videoTimeID, instanceID) {\r\n\r\n                let selector = Elements.selectors.elementContent;\r\n                selector += '[data-elementshortname=\"videotime\"][data-instanceid=\"' + instanceID + '\"]';\r\n\r\n                var contentElement;\r\n                var player;\r\n                var intervalCheck;\r\n\r\n\r\n                var videoJSInterval = setInterval(() => {\r\n\r\n                    contentElement = document.querySelector(selector + ' .video-js, ' + selector + ' .vimeo-embed');\r\n\r\n                    if (contentElement) {\r\n                        player = videoJS.getPlayer(contentElement) || new VimeoPlayer(contentElement);\r\n                        if (player !== null) {\r\n                            clearInterval(videoJSInterval);\r\n                            player.on('pause', verifyCompletion);\r\n                            player.on('ended', verifyCompletion);\r\n                        }\r\n                    }\r\n                }, 1000);\r\n\r\n                const verifyCompletion = () => {\r\n\r\n                    var promises = ajax.call([{\r\n                        methodname: 'cdelement_videotime_verify_completion',\r\n                        args: { instanceid: videoTimeID }\r\n                    }]);\r\n\r\n                    promises[0].done((result) => {\r\n                        if (result) {\r\n                            clearInterval(intervalCheck);\r\n                            Elements.removeWarning();\r\n                            Elements.refreshContent();\r\n                        }\r\n                        return;\r\n                    }).fail(Notification.exeception);\r\n                };\r\n\r\n                // Verify the completion on every 10 seconds. untill the completion.\r\n                intervalCheck = setInterval(verifyCompletion, 1000 * 10);\r\n            }\r\n        };\r\n    });\r\n"],"names":["define","ajax","$","Elements","videoJS","VimeoPlayer","Notification","processResults","selector","data","results","i","length","push","value","id","label","name","transport","query","success","failure","promises","courseid","document","querySelector","dataset","calls","methodname","args","limitfrom","limitnum","call","when","apply","done","fail","updateCourseID","cmField","fieldName","courseField","el","updateField","e","courseID","changeEvent","Event","dispatchEvent","addEventListener","updateNextElements","videoTimeID","instanceID","selectors","elementContent","contentElement","player","intervalCheck","videoJSInterval","setInterval","getPlayer","clearInterval","on","verifyCompletion","instanceid","result","removeWarning","refreshContent","exeception"],"mappings":";;;;;;;AAsBAA,qDAAO,CACH,YAAa,SAAU,+BACvB,2BAA4B,uBAAwB,sBACpD,SAAUC,KAAMC,EAAGC,SAAUC,QAASC,YAAaC,oBAExC,CAEHC,eAAgB,SAAUC,SAAUC,UAG5BC,QAAU,GACVC,EAAI,MACHA,EAAI,EAAGA,EAAIF,KAAKG,OAAQD,IACzBD,QAAQG,KAAK,CAAEC,MAAOL,KAAKE,GAAGI,GAAIC,MAAOP,KAAKE,GAAGM,cAE9CP,SAGXQ,UAAW,SAAUV,SAAUW,MAAOC,QAASC,aAIvCC,cAEiB,IAAVH,QACPA,MAAQ,QAGRI,SATKC,SAASC,cAAcjB,UASdkB,QAAQH,SAEV,IAAZA,WACAA,SAAW,OAUXI,MAAQ,CAAC,CACTC,WAAY,wCAAyCC,KARxC,CACbV,MAAOA,MACPW,UAAW,EACXC,SAAU,IACVR,SAAUA,YAQdD,SAAWrB,KAAK+B,KAAKL,OACrBzB,EAAE+B,KAAKC,MAAMhC,EAAE+B,KAAMX,UAAUa,MAAK,SAAU1B,MAC1CW,QAAQX,SACT2B,KAAKf,UASZgB,eAAgB,CAACC,QAASC,mBAChBC,YAAchB,SAASC,cAAc,SAAWc,UAAY,SAC9DE,GAAKjB,SAASC,cAAc,SAAWa,QAAU,WAE/CI,YAAeC,UACXC,SAAWJ,YAAY1B,SAC7B2B,GAAGf,QAAQH,SAAWqB,SAElBD,EAAG,CACHF,GAAG3B,MAAQ,OACP+B,YAAc,IAAIC,MAAM,UAC5BL,GAAGM,cAAcF,eAIL,OAAhBL,aAA+B,OAAPC,KACxBC,aAAY,GACZF,YAAYQ,iBAAiB,SAAUN,eAY/CO,mBAAoB,SAAUC,YAAaC,gBAEnC3C,SAAWL,SAASiD,UAAUC,mBAG9BC,eACAC,OACAC,cAJJhD,UAAY,wDAA0D2C,WAAa,SAO/EM,gBAAkBC,aAAY,MAE9BJ,eAAiB9B,SAASC,cAAcjB,SAAW,eAAiBA,SAAW,mBAI5D,QADf+C,OAASnD,QAAQuD,UAAUL,iBAAmB,IAAIjD,YAAYiD,mBAE1DM,cAAcH,iBACdF,OAAOM,GAAG,QAASC,kBACnBP,OAAOM,GAAG,QAASC,qBAG5B,WAEGA,iBAAmB,KAEN7D,KAAK+B,KAAK,CAAC,CACtBJ,WAAY,wCACZC,KAAM,CAAEkC,WAAYb,gBAGf,GAAGf,MAAM6B,SACVA,SACAJ,cAAcJ,eACdrD,SAAS8D,gBACT9D,SAAS+D,qBAGd9B,KAAK9B,aAAa6D,aAIzBX,cAAgBE,YAAYI,iBAAkB"}