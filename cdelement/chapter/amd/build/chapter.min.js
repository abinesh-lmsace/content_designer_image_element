/**
 * Initializes event listeners and manages chapter completion and progress updates
 * for the content designer module. Handles user interactions such as completing
 * chapters and updating the progress bar. Supports both standard and popup formats.
 * Utilizes AJAX calls to update chapter completion status and refreshes content
 * accordingly. Ensures sticky progress bar behavior during scrolling.
 *
 * @module cdelement_chapter/chapter
 * @copyright  2024 bdecent gmbh <https://bdecent.de>
 * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("cdelement_chapter/chapter",["jquery","mod_contentdesigner/elements","core/ajax","core/fragment","core/templates","core/loadingicon","core/notification","core/str"],(function($,Elements,AJAX,Fragment,Templates,LoadingIcon,Notification,Str){let completionIcon,completionStr;var chapterInProgress=!1;const initEventListeners=()=>{Templates.renderPix("e/tick","core").done((function(img){completionIcon=img})),Str.get_string("completion_manual:done","course").done((str=>{completionStr=str})),document.body.removeEventListener("click",completeChapterListener),document.body.addEventListener("click",completeChapterListener),document.body.removeEventListener("click",chapternavigation),document.body.addEventListener("click",chapternavigation),automaticCompletion(),document.querySelector("#page").addEventListener("scroll",(()=>{automaticCompletion(),stickyProgress()}));var popup=document.querySelector("body.format-popups .modal-content .modal-body");null!==popup&&popup.addEventListener("scroll",(()=>{automaticCompletion(),stickyProgress()})),window.addEventListener("scroll",(()=>{automaticCompletion(),stickyProgress()})),document.querySelector(".contentdesigner-wrapper").addEventListener("elementupdate",(()=>{chapternavigation()})),chapternavigation()},completeChapterListener=e=>{var completeCTA=e.target.closest("button.complete-chapter");if(null!=completeCTA){e.preventDefault();var chapter=completeCTA.dataset.chapterid;completeChapter(chapter,completeCTA).done((()=>{updateProgress(),completeCTA.classList.remove("btn-outline-secondary"),completeCTA.classList.add("btn-success"),completeCTA.innerHTML=completionIcon+" "+completionStr,Elements.removeWarning(),Elements.refreshContent();let chapterlist=e.target.closest(".chapters-list");chapterlist&&!chapterlist.classList.contains("completed")&&chapterlist.classList.add("completed")})).catch(Notification.exception)}},stickyProgress=function(){var progressElem=document.querySelector(".contentdesigner-progress"),contentWrapper=document.querySelector(".contentdesigner-content");progressElem&&contentWrapper&&(null!=contentWrapper&&contentWrapper.getBoundingClientRect().top<50?(contentWrapper.classList.add("sticky-progress"),progressElem.classList.add("fixed-top")):(progressElem.classList.remove("fixed-top"),contentWrapper.classList.remove("sticky-progress")))},completeChapter=(chapter,button)=>{var promises=AJAX.call([{methodname:"cdelement_chapter_update_completion",args:{chapter:chapter,cmid:Elements.contentDesignerData().cmid}}]);return LoadingIcon.addIconToContainerRemoveOnCompletion(button,promises[0]),promises[0]},updateProgress=()=>{var params={cmid:Elements.contentDesignerData().cmid};Fragment.loadFragment("cdelement_chapter","update_progressbar",Elements.contentDesignerData().contextid,params).done(((html,js)=>{Templates.replaceNode("div#contentdesigner-progressbar",html,js)})).catch(Notification.exception)},automaticCompletion=()=>{const chapters=Array.from(document.querySelectorAll('.course-content-list .chapters-list[data-completionmode="1"]'));if(chapters.length&&!chapterInProgress)for(let i=0;i<chapters.length;i++){const currentChapter=chapters[i];if(!currentChapter.classList.contains("completed")&&isElementInViewport(currentChapter)){chapterInProgress=!0;const chapterId=currentChapter.dataset.id;completion(currentChapter,chapterId)}}},completion=(currentChapter,chapterId)=>{AJAX.call([{methodname:"cdelement_chapter_update_completion",args:{chapter:chapterId,cmid:Elements.contentDesignerData().cmid}}])[0].done((()=>{currentChapter.classList.add("completed"),updateProgress(),Elements.removeWarning(),Elements.refreshContent(),currentChapter.removeEventListener("scroll",automaticCompletion)})).always((()=>{chapterInProgress=!1})).catch(Notification.exception)},isElementInViewport=el=>{const rect=el.getBoundingClientRect();return rect.top<(window.innerHeight||document.documentElement.clientHeight)&&rect.bottom>0&&rect.left<(window.innerWidth||document.documentElement.clientWidth)&&rect.right>0},chapternavigation=function(){document.querySelectorAll(".contentdesigner-chapter").forEach((chapter=>{chapter.addEventListener("click",(function(e){const chapterid=e.target.dataset.chapter;viewtochapter(chapterid)}))}))},viewtochapter=chapterid=>{var chapterSelector=document.querySelector('li.chapters-list[data-id="'+chapterid+'"]');null!=chapterSelector&&chapterSelector.scrollIntoView(!0)};return{init:function(){initEventListeners()}}}));

//# sourceMappingURL=chapter.min.js.map